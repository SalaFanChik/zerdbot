from aiogram import Router, F
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from app.utils.texts import answer  
from app.db.user_crud import set_user_lang
from app.keyboards.reply import get_main_menu, lang_kb
from app.states.lang_state import Form
from aiogram.types import BotCommand
from aiogram.types.bot_command_scope_chat import BotCommandScopeChat
from app.bot_instance import bot  


router = Router()


@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext):
    """ Handler for /start command """
    await message.answer("–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ?! –°—ñ–∑–≥–µ “õ–∞–π —Ç—ñ–ª–¥–µ –∂–∞—É–∞–ø –∞–ª“ì–∞–Ω —ã“£“ì–∞–π–ª—ã?\n\n –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –≤–∞–º —É–¥–æ–±–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç?", reply_markup=lang_kb)
    
    await state.set_state(Form.choose_language) 
    


@router.message(Form.choose_language, F.text.in_(["“ö–∞–∑–∞“õ—à–∞", "–†—É—Å—Å–∫–∏–π"]))
async def set_language(message: Message, state: FSMContext, session: AsyncSession):
    lang = "kz" if message.text == "“ö–∞–∑–∞“õ—à–∞" else "ru"
    await set_user_lang(session, message.from_user.id, lang)  

    if lang == "kz":
        commands = [
            BotCommand(command="start", description="‚ôªÔ∏è –ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—É"),
            BotCommand(command="support", description="‚òéÔ∏è “ö–æ–ª–¥–∞—É"),
            BotCommand(command="faq", description="‚ÑπÔ∏è –ñ–∏—ñ “õ–æ–π—ã–ª–∞—Ç—ã–Ω —Å“±—Ä–∞“õ—Ç–∞—Ä"),
            BotCommand(command="lang", description="üåê –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É"),
            BotCommand(command="log", description="üñ® –õ–æ–≥—Ç–∞—Ä–¥—ã –∞–ª—É"),
        ]
    else:
        commands = [
            BotCommand(command="start", description="‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
            BotCommand(command="support", description="‚òéÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
            BotCommand(command="faq", description="‚ÑπÔ∏è FAQ"),
            BotCommand(command="lang", description="üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"),
            BotCommand(command="log", description="üñ® –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏"),
        ]

    await bot.set_my_commands(
        commands,
        scope=BotCommandScopeChat(chat_id=message.from_user.id)
    )
    await message.answer(answer["greeting"][lang], reply_markup=get_main_menu(lang))
    await state.clear()